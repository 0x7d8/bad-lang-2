fn is_sorted(n) {
	let len = array#len(n)
	if (len < 2) {
		return true
	}

	let prev = array#get(n, 0)

	let j = 1
	let sorted = true
	loop {
		if (j === len) {
			sorted = true
			break
		}

		if (array#get(n, j) < prev) {
			sorted = false
			break
		}

		prev = array#get(n, j)
		j++
	}

	return sorted
}

fn bogosort(n) {
	let len = array#len(n)

	loop {
		if (is_sorted(n)) {
			break
		}

		let i = 0
		loop {
			if (i >= len) {
				break
			}

			let new_pos = math#round(rng#rand_range(0, len - 1))
			let tmp = array#get(n, new_pos)

			array#set(n, new_pos, array#get(n, i))
			array#set(n, i, tmp)
			i++
		}
	}
}

let numbers = [5, -1, 4, 3]

io#println("Before:")
io#println(numbers)
let start = time#now()
bogosort(numbers)
let end = time#now()
io#println("After:")
io#println(numbers)
io#println(string#format("In: {}s", end - start))